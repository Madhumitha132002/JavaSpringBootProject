package com.SpringBootProject.StudentDetails.Controller;
import com.SpringBootProject.StudentDetails.Model.StudentModel;
import com.SpringBootProject.StudentDetails.Service.StudentDetailsServiceImpl;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import java.util.List;

//Indicate a particular class servers RESTFUL web servers
@RestController
//Specifies all the request mappings in controller using this base path
@RequestMapping("/students")
public class StudentController {
//
	public static final Logger logInfo=LoggerFactory.getLogger(StudentController.class);
	  @Autowired
    private  StudentDetailsServiceImpl studentService;
	  
	  @Operation(
			  description="This Method is used to add the Student Details",
			  summary="It uses the POST request Method ",
			  responses= {
					  @ApiResponse(
							  description="Data Inserted Successfully",
							  responseCode="200"
							  ),
					  @ApiResponse(
							  description="Data is not Inserted",
							  responseCode="403"
							  )	
			  })
	  

	  @PostMapping("/add")   
	    public ResponseEntity<String> addStudent(@RequestBody StudentModel studentModel) { 
		  
		  ResponseEntity<String> addStudentDetails=studentService.addStudentDetails(studentModel);
		  logInfo.info(addStudentDetails.getBody());
	        return addStudentDetails;
	    }
	 
	  @Operation(
			  description="This Method is used to delete the Student Details",
			  summary="It uses the DELETE request Method ",
			  responses= {
					  @ApiResponse(
							  description="Data Deleted Successfully",
							  responseCode="200"
							  ),
					  @ApiResponse(
							  description="Data is not Deleted",
							  responseCode="403"
							  )	
			  })
	  
     @DeleteMapping("/delete/{studentId}")
     public ResponseEntity<String> deleteStudent(@PathVariable int studentId) {
//    	 logInfo.info("It is inside the controller");
//    	 logInfo.warn("it has the error");
//    	 logInfo.error("It found the error");
//    	 logInfo.debug("It is debug Application");
    	ResponseEntity<String> deleteStudentDetails = studentService.deleteStudentDetails(studentId);
    	logInfo.info(deleteStudentDetails.getBody());
    	return deleteStudentDetails; // Assuming you return the ResponseEntity further
        
    }
	  @Operation(
			  description="This Method is used to update the Student Details",
			  summary="It uses the PUT request Method ",
			  responses= {
					  @ApiResponse(
							  description="Data Deleted Successfully",
							  responseCode="200"
							  ),
					  @ApiResponse(
							  description="Data is not Deleted",
							  responseCode="403"
							  )	
			  })
    @PutMapping("/update")
    public ResponseEntity<String> updateStudent(@RequestBody StudentModel studentModel) {
    	ResponseEntity<String> updateStudentDetails=studentService.updateStudentDetails(studentModel);
    	logInfo.info(updateStudentDetails.getBody());
        return updateStudentDetails;    
    }

    @GetMapping("/{studentId}")
    public ResponseEntity<StudentModel> getStudentById(@PathVariable int studentId) {
        ResponseEntity<StudentModel> getStudentById = studentService.findById(studentId);
        StudentModel student = getStudentById.getBody();
        logInfo.info(""+student);
        return getStudentById;
    }

    @GetMapping("/all")
    public ResponseEntity<List<StudentModel>> getAllStudents() {
    	ResponseEntity<List<StudentModel>> getAllStudentDetails=studentService.getAllStudentDetails();
    	List<StudentModel> student=getAllStudentDetails.getBody();
    	logInfo.info(""+student);
        return getAllStudentDetails;
    }
}