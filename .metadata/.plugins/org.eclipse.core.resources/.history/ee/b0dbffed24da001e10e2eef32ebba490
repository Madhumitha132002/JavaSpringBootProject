package com.SpringBootProject.StudentDetails.Service;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import com.SpringBootProject.StudentDetails.Model.StudentModel;
import com.SpringBootProject.StudentDetails.Repository.StudentDAOImpl;

@ExtendWith(MockitoExtension.class)
public class StudentServiceTest {
    
	@InjectMocks
    private StudentDetailsServiceImpl studentservice;
    
    @Mock
    private StudentDAOImpl studentrepository;

//    @BeforeEach
//    void setUp() {
//        studentrepository = mock(StudentDAOImpl.class); // Mocking studentrepository
//        studentservice = new StudentDetailsServiceImpl();
//        studentservice.setStudentDetailsRepo(studentrepository); // Injecting mocked studentrepository into studentservice
//    }

    @Test
    @DisplayName("Should add the records to the database")
    void addStudentDetails() {
        // Create a sample student model
        StudentModel student = new StudentModel();
//        student.setName("Gugan");
//        student.setRegisterNo("675");
//        student.setGender("Male");
//        student.setAge(23);
//        student.setPhoneNumber("8098161001");
//        student.setCurrentStatus("Undergoing");
//        student.setEmailId("Gugan@gmail.com");
//        student.setCourse("MCA");
//        student.setFees(19000);
     
        // Mock the behavior of studentrepository
        when(studentrepository.addStudentDetails(any(StudentModel.class))).thenReturn(1);
        
        // Invoke the method under test
        ResponseEntity<String> responseEntity = studentservice.addStudentDetails(student);
        // Assert the response
        System.out.println(responseEntity.getStatusCode());
        assertNotNull(responseEntity);
        assertEquals(HttpStatus.CREATED, responseEntity.getStatusCode());
        assertEquals("Student inserted successfully", responseEntity.getBody());
    }
}
